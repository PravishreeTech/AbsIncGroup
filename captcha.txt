Good question üëç Since you want a **simple captcha** for your contact form (not too heavy like Google reCAPTCHA v3), you have two main options:

---

## ‚úÖ Option 1: Google reCAPTCHA (recommended for live projects)

Most secure and widely used. Easy to set up.

### Steps:

1. Go to üëâ [Google reCAPTCHA Admin Console](https://www.google.com/recaptcha/admin/create)

   * Register your domain
   * Choose **reCAPTCHA v2 ‚Üí "I'm not a robot" Checkbox** (simple)
   * Get **Site Key** and **Secret Key**

2. Add reCAPTCHA script in your form page:

```html
<script src="https://www.google.com/recaptcha/api.js" async defer></script>
```

3. Add the captcha widget inside your form:

```html
<form class="contact-form" id="contactForm">
    <!-- your form fields -->

    <div class="g-recaptcha" data-sitekey="YOUR_SITE_KEY"></div>

    <button type="submit" class="submit-btn">Send Message</button>
</form>
```

4. On **server-side** (PHP, Node, Python, etc.), validate with the **Secret Key**:

```php
<?php
$recaptchaResponse = $_POST['g-recaptcha-response'];
$secret = "YOUR_SECRET_KEY";

$response = file_get_contents("https://www.google.com/recaptcha/api/siteverify?secret=$secret&response=$recaptchaResponse");
$responseKeys = json_decode($response, true);

if(intval($responseKeys["success"]) !== 1) {
    echo "Captcha failed. Please try again.";
} else {
    echo "Captcha passed. Process form here.";
}
?>
```

---

## ‚úÖ Option 2: Very Simple Custom Captcha (basic)

If you don‚Äôt want external services, you can generate a random math question.

### Example:

```html
<form id="contactForm">
    <!-- form fields -->

    <label for="captcha">What is <span id="num1"></span> + <span id="num2"></span> ?</label>
    <input type="text" id="captcha" name="captcha" required>

    <button type="submit">Send Message</button>
</form>

<script>
    const num1 = Math.floor(Math.random() * 10);
    const num2 = Math.floor(Math.random() * 10);
    document.getElementById("num1").textContent = num1;
    document.getElementById("num2").textContent = num2;

    document.getElementById("contactForm").addEventListener("submit", function(e) {
        const answer = parseInt(document.getElementById("captcha").value);
        if (answer !== num1 + num2) {
            e.preventDefault();
            alert("Captcha failed! Please try again.");
        }
    });
</script>
```

üëâ This is **good for demo/personal projects**, but **not secure enough** for production (bots can bypass it).

---

‚ö° **For a live project:**
üëâ Use **Google reCAPTCHA v2/v3**. It‚Äôs free, secure, and easy to integrate.

Do you want me to give you a **ready-to-use reCAPTCHA v2 example in plain HTML + PHP** (so you can test it directly)?
